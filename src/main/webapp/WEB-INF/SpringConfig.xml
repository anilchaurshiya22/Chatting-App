<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
                http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc 
                http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                http://www.springframework.org/schema/tx
                http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
  
    <!-- import security config -->
    <import resource="SpringSecurity.xml" />
    <mvc:annotation-driven  />
    
       
    <context:component-scan base-package="com.springchat" />
        
    <!-- needed for security tag lib expression support -->
    <bean id="webexpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" /> 

        
    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties" ref="hibernateProperties" />
        <!-- OR mapping files. -->
        <property name="packagesToScan">
            <list>
                <value>com.springchat.domain</value>
                <!--                <value>com.springchat.domain.UserRoles</value>
                <value>com.springchat.domain.FriendRequest</value>-->
            </list>
        </property>
    </bean>

    <mvc:resources mapping="/resources/**" location="/resources/" />
    <context:property-placeholder location="classpath:database.properties" />
   
    <!-- the datasource -->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${database.driver}" />
        <property name="url" value="${database.url}" />
        <property name="username" value="${database.user}" />
        <property name="password" value="${database.password}" />
    </bean>

    <!-- hibernate Properties -->
    <bean id="hibernateProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">            
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>				
            </props>
        </property>
    </bean>    
    
    <bean id="txManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- look for transaction annotations -->
    <tx:annotation-driven transaction-manager="txManager" />
    
    <!-- SET default mail properties -->
    
    
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com" />
        <property name="port" value="587" />
        <property name="username" value="hamrochatapp@gmail.com"/>
        <property name="password" value="spring@12"/>
 
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
            </props>
        </property>
    </bean>
    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <value>
                resource.loader=class
                class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
            </value>
        </property>
    </bean>
     
    <bean id="mailService" class="com.springchat.serviceImpl.MailService">
        <property name="mailSender" ref="mailSender" />
        <property name="velocityEngine" ref="velocityEngine"/>
    </bean>
    
    
    <!-- manually create the carService here -->   
    <bean id="userService" class="com.springchat.serviceImpl.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
    </bean>
    <bean id="userDao" class="com.springchat.dao.UserDao">
        <property name="sf" ref="sessionFactory"/>
    </bean>    

    
</beans>